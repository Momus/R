trace(ls)
ls()
debug(ls)
ls()
?
help
help()
step()
quit()
exit()
bye()
quit()
help()
quit()
?seq_along
seq_along(4)
seq_along(7)
for (i in seq_along(x)){print(x[i])}
for (i in seq_along(4)){print(x[i])}
testfn <- function(x) for (i in seq_along(x)){print(x[i])}
testfn(4)
testfn(1)
testfn(c("a", "b", "c")
)
testfn <- function(x) for (i in 1:x){print(i)}
testfn(4)
Factorial_loop <-  function(x)
    factorial = 1
{ for i in 1:x
    
    {   x = x - 1
        sum = sum * x
    }
}
Factorial_loop <- function(x)
{    factorial = 1
 for i in 1:x
    
    {   x = x - 1
        sum = sum * x
    }
}
Factorial_loop <- function(x)
{    factorial = 1
 for i in 1:x
    
    {   x = x - 1
        sum = sum * x
    }
}
traceback()
Factorial_loop <-  function(x) {
    factorial = 1
    for i in 1:x {
        x = x - 1
        factorial = factoial * x
    }
}
Factorial_loop <-  function(x) {
    factorial = 1
    for(i in 1:x) {
        x = x - 1
        factorial = factorial * x
    }
}
Factorial_loop(1)
Factorial_loop <-  function(x) {
    factorial = 1
    for(i in 1:x) {
        x = x - 1
        factorial = factorial * x
    }
factorial
}
Factorial_loop(1)
Factorial_loop(3)
Factorial_loop("a")
Factorial_loop <-  function(x) {
    factorial = 1
counter = x
    for(i in 1:x) {
        counter = counter - 1
        factorial = factorial * counter
    }}
Factorial_loop(3)
Factorial_loop(0)
Factorial_loop <-  function(x) {
    factorial = 1
counter = x
    for(i in 1:x) {
        counter = counter - 1
        factorial = factorial * counter
    }
factorial
}
Factorial_loop(0)
Factorial_loop(4)
Factorial_loop(2)
Factorial_loop(0)
5:1
n = 43
n
n = n - 1
n
n--
)
n --
1
Factorial_loop <-  function(x) {
    factorial <- 1
    n <- x
    for (i in x:1) {
       n <- n - 1
       factorial <- factorial * x
    }
    factorial
}

Factorial_loop(0)
Factorial_loop(3)
Factorial_loop(2)
Factorial_loop(1)
Factorial_loop(5)
Factorial_loop(19)
Factorial_loop(0)
Factorial_loop <-  function(x) {
    factorial <- 1
    for (i in x:1) {
        factorial <- factorial * x
        x <- x - 1
        
    }
    factorial
}
Factorial_loop(0)
Factorial_loop(19)
Factorial_loop(1)
Factorial_loop <-  function(x) {
    if (x == 0) return 1
    
    factorial <- 1
    for (i in x:1) {
        factorial <- factorial * x
        x <- x - 1
        
    }
    factorial
}

Factorial_loop <-  function(x) {
    if(x == 0){return 1}
    
    factorial <- 1
    for (i in x:1) {
        factorial <- factorial * x
        x <- x - 1
        
    }
    factorial
}
Factorial_loop <-  function(x) {
    if (x == 0) return(1)
    factorial <- 1
    for (i in x:1) {
        factorial <- factorial * x
        x <- x - 1
    }
    factorial
}
Factorial_loop(1)
Factorial_loop(0)
Factorial_loop(3)
Factorial_loop(19)
Factorial_loop(4)
Factorial_loop(5)
library(purrr)
?reduce
reduce(c(1,2,3) , + )
c(1,2,3)
sum(c(1,2,3))
reduce(c(1,2,3) , sum )
reduce(c(1,2,3) , `+` )
replicate(sample(10, 5), simplify = FALSE)
traceback()
replicate(5, sample(10, 5), simplify = FALSE)
list() %>% reduce(`+`)
list() %>% reduce(`+`, .init = 0)
5 %>%
       replicate(sample(10, 5), simplify = FALSE) %>%
       reduce(intersect)
1:3 %>% reduce(`*`)
1:5 %>% reduce(`*`)
1:19 %>% reduce(`*`)
1:10 %>% reduce(`*`)
1:10.0 %>% reduce(`*`)
1:19.0 %>% reduce(`*`)
1:10 %>% to.float %>% reduce(`*`)
1:15 %>% reduce(`*`)
1:12 %>% reduce(`*`)
ls()
1:14 %>% reduce(`*`)
1:13 %>% reduce(`*`)
1.0:14.0 %>% reduce(`*`)
2614 * 1456000
2614L * 1456000L
class(2614L * 1456000L)
1:10
class(1:10)
1.0:10.0
class(1.0:10.0)
seq(1,10)
class(seq(1,10))
class(seq(1.0,10.0))
?seq
class(seq(1.0,10.0, 1.0))
class(seq(1,10, 1.0))
Factorial_reduce <- function(x) {
    if (x == 0) return(1)
    seq(1 , x, 1.0) %>%
        reduce(`*`)
}
Factorial_reduce(10)
Factorial_reduce(19)
Factorial_reduce(0)
Factorial_reduce(1)
Factorial_reduce(25)
Factorial_reduce(1000)
Factorial_reduce(100)
Factorial_reduce(450)
Factorial_reduce(400)
Factorial_reduce(200)
Factorial_reduce(120)
Factorial_reduce(121)
Factorial_reduce(140)
Factorial_reduce(149)
Factorial_reduce(150)
Factorial_reduce(200)
Factorial_reduce(180)
Factorial_reduce(170)
Factorial_reduce(178)
Factorial_reduce(175)
Factorial_reduce(173)
Factorial_reduce(172)
Factorial_reduce(171)
Factorial_reduce(170)
Factorial_reduce(170)
Factorial_reduce(-4)
Factorial_reduce(0)
Factorial_reduce(-1)
Factorial_loop(-1)
Factorial_loop(-20)
Factorial_loop(-2)
Factorial_loop(-3)
Factorial_loop(-4)
Factorial_loop(-5)
Factorial_func <- function(x, factoiral = 1){
    if (x == 0) return(factorial)
    Factorial_func((x-1), (x * factorial))
    }
Factorial_func(0)
Factorial_func(1)
Factorial_func(10)
Factorial_func(2)
Factorial_func <- function(x, factoiral = 1){
    if (x == 0) return(factorial)
    Factorial_func(x = (x-1), factorial = (x * factorial))
    }
Factorial_func(2)
Factorial_func <- function(x, f = 1){
    if (x == 0) return(f)
    next_prod <- x * f
    next_x <- x - 1
    Factorial_func(next_x, next_prod)
    }
Factorial_func(2)
Factorial_func(3)
Factorial_func(10)
Factorial_func(-1)
Factorial_func(0)
Factorial_func(100)
Factorial_func(1)
Factorial_func(2)
Factorial_func(3)
Factorial_func(4)
Factorial_func(5)
Factorial_func(6)
Factorial_func(7)
Factorial_func(8)
Factorial_func(9)
Factorial_func(10)
devtools::install_github("hadley/memoise")
library(memoise)
?memoise
Factorial_func <- function(x, fact = 1){
    if (x == 0) return(f)
    next_fact <- x * f
    next_x <- x - 1
    Factorial_func(next_x, next_fact)
}
library(memoise)
Factorial_easymem <- function(x){
    Factorial_mem <- memoise(Factorial_func)
}
library(microbenchmark)
microbenchmark(a <- Factorial_func(100), b <- Factorial_easymem(100))
library(memoise)
?memoise
memoise()
memoise
devtools::unload(memoise)
quit()
n
